name: Tag New Version

on:
  push:
    branches:
      - main

jobs:
  tag-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get the current version tag
        id: get_version
        run: |
          # Fetch all tags
          git fetch --tags

          # Get the latest tag
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)

          # If no tags are found, start at v0.0.0
          if [ -z "$latest_tag" ]; then
            latest_tag="v0.0.0"
          fi

          echo "Latest tag: $latest_tag"
          echo "::set-output name=LATEST_TAG::$latest_tag"

      - name: Calculate new version
        id: calc_version
        run: |
          latest_tag=${{ steps.get_version.outputs.LATEST_TAG }}

          # Remove the 'v' prefix
          latest_tag=${latest_tag#v}

          # Split the version into components
          IFS='.' read -r -a version_parts <<< "$latest_tag"

          # Increment the patch version (you can change this to increment minor/major)
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}
          patch=$((patch + 1))

          new_version="v$major.$minor.$patch"

          echo "New version: $new_version"
          echo "::set-output name=NEW_VERSION::$new_version"

      - name: Create new tag
        run: |
          new_version=${{ steps.calc_version.outputs.NEW_VERSION }}

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create new tag
          git tag $new_version
          git push origin $new_version

